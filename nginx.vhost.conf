# Clear the Origin header for all proxied requests
proxy_set_header Origin ''; # /etc/nginx/sites-enabled/new.codebuilder.org

# Define an upstream group for the Next.js app
upstream nextjs_upstream {
      server 127.0.0.1:3000; # Next.js runs on localhost:3000
      keepalive 64; # Keep up to 64 connections alive
}

# Redirect all HTTP traffic to HTTPS
server {
      listen 80;
      listen [::]:80;
      server_name new.codebuilder.org;
      return 301 https://$host$request_uri; # Redirect to HTTPS
}

server {
      listen 443 ssl http2;
      listen [::]:443 ssl http2;
      server_name new.codebuilder.org;

      # SSL certificate configuration
      ssl_certificate /etc/letsencrypt/live/codebuilder.org/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/codebuilder.org/privkey.pem;
      include /etc/letsencrypt/options-ssl-nginx.conf;
      ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

      # Security headers
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header X-Frame-Options "DENY";
      add_header X-Content-Type-Options "nosniff";
      add_header X-XSS-Protection "1; mode=block";
      add_header Referrer-Policy "strict-origin-when-cross-origin";

      # Log files
      access_log /var/log/nginx/new.codebuilder.org.access.log;
      error_log /var/log/nginx/new.codebuilder.org.error.log;

      # Proxy Next.js internal assets
      location ~ ^/__nextjs {
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin '';
      }

      # Proxy all other requests to Next.js
      location / {
            proxy_pass http://nextjs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; # For websockets
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;

            proxy_set_header Origin '';
      }

      # Cache Next.js static assets
      location /_next/static {
            proxy_pass http://nextjs_upstream;
            proxy_cache STATIC;
            add_header Cache-Control "public, max-age=31536000, immutable";
            proxy_set_header Origin '';
      }

      # Cache public assets
      location /public {
            proxy_pass http://nextjs_upstream;
            proxy_cache STATIC;
            add_header Cache-Control "public, max-age=31536000";
            proxy_set_header Origin '';
      }

      # Health check endpoint
      location /health {
            access_log off;
            return 200 'OK';
            add_header Content-Type text/plain;
            proxy_set_header Origin '';
      }

      # Deny access to hidden files (starting with .)
      location ~ /\. {
            deny all;
      }

}

# Map to properly handle upgrade connections (e.g., websockets)
map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
}
